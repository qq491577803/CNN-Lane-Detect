import xlrd
import xlwt
from glob import glob
import os
class DMS:
    def __init__(self):
        self.paths = self.getpaths()
        self.message()
        if  len(self.paths)  == 0:
            print("There are't any *.xlsm files have been fund...")
            print()
            input("Click enter to close the window...")
            exit(0)
        self.row,self.col = 0,0
    def message(self):
        print("Generated by Liusz on April 2019.")
        print()
        print("Put the exe file in the root of the DMS500 files...")
        print("The preprocess files must be *.xlsm file...")
        print("The program can only be used in win64...")
        input("Click enter to start ...")
        print()

    def buildxls(self):
        self.wb = xlwt.Workbook()
        self.sheet = self.wb.add_sheet("result val of dms",cell_overwrite_ok=True)
    def getpaths(self):
        paths = glob(r".\*.xlsm")
        return paths
    def read_write_xls(self):
        for path in self.paths:
            fname = os.path.splitext(os.path.split(path)[1])[0]
            print(fname,"has been processed..")
            tmp_wb = xlrd.open_workbook(path)
            tmp_sheet = tmp_wb.sheet_by_index(0)
            tmp_nrows = tmp_sheet.nrows
            tmp_ncols = tmp_sheet.ncols
            tmp_colval = []
            tmp_colval.append(fname)
            for t in range(tmp_ncols):
                tmpval = tmp_sheet.col_values(t)[6::]
                try:
                    tmpval = [float(x) for x in tmpval]
                    tmpeve = sum(tmpval) / len(tmpval)
                except:
                    tmpeve = " "
                tmp_colval.append(tmpeve)
            for x in range(len(tmp_colval)):
                self.sheet.write(self.row,x,tmp_colval[x])
            self.row += 1
    def buildhead(self):
        tmp_wb = xlrd.open_workbook(self.paths[0])
        tmp_sheet = tmp_wb.sheet_by_index(0)
        self.head = tmp_sheet.row_values(5)
        self.sheet.write(0,self.col,"Name")
        for i in range(len(self.head)):
            self.sheet.write(self.row,i+1,self.head[i])
        self.row += 1
    def savexls(self):
        self.wb.save("./result.xls")
    def main(self):
        self.buildxls()
        self.buildxls()
        self.buildhead()
        self.read_write_xls()
        self.savexls()
        print()
        print("All the *.xlsm files has been processed...")
        input("Click enter to close the window...")
if __name__ == '__main__':
    dms = DMS()
    dms.main()